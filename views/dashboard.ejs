<%-include('layouts/header.ejs') %>

    <h2 class="mb-4">Hello <%= user.name %>
    </h2>

    <div class="row">
        <div class="col-md-4">
            <ul class="list-group">
                <% if(users.length> 0) {
                    for(let i=0; i<users.length; i++) { %>

                        <li class="list-group-item list-group-item-dark cursor-pointer user-list"
                            data-id='<%= users[i]['_id']%>'>
                            <img src="<%='http://localhost:9000/'+users[i]['image'] %>" alt="" height="50px"
                                width="50px">
                            <%= users[i]['name'] %>

                                <% if(users[i]['is_online']==1){ %>
                                    <sup class="online-status" id="<%= users[i]['_id']%>-status">Online</sup>
                                    <% } else{ %>
                                        <sup class="offline-status" id="<%= users[i]['_id']%>-status">Offline</sup>
                                        <% } %>

                        </li>
                        <% } } %>
            </ul>
        </div>

        <div class="col-md-8">
            <h3 class="start-head">Click to start Chat</h3>
            <div class="chat-section">
                <div id="chat-container">
                    
                </div>

                <form action="" id="chat-form">
                    <input type="text" id="message" class="one border" placeholder="Enter Message"  required>
                    <input type="submit" value="Send" id="sendBtn" class="btn btn-primary">
                    <button type="button" class="first-btn btn">ðŸ˜€</button>
                </form>
                
            </div>
            
        </div>
        
    </div>


    <div class="modal fade" id="deleteChatModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLongTitle">Delete Chat</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <form id="delete-chat-form">
            <div class="modal-body">
                <input type="hidden" name="id" id="delete-message-id">
                <p>Are you sure you want to delete this message? This message will be deleted permanently!</p>
                <p><b id="delete-message"></b></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-danger">Delete</button>
            </div>
        </form>
        </div>
    </div>
    </div>

    <script>

        var sender_id = '<%= user._id %>'
        var receiver_id;
        var socket = io('/user-namespace', {
            auth: {
                token: '<%= user._id %>'       //helps map between socket and user on database
            }
        })


        $(document).ready(function () {

            $('.user-list').click(function () {

                var user_id = $(this).attr('data-id');
                receiver_id = user_id;

                $('.start-head').hide(); // Hide the start heading
                $('.chat-section').show(); // Show the chat section
                
                socket.emit('exsistsChat',{sender_id: sender_id, receiver_id: receiver_id})
            });
        });

        // update user online status
        socket.on('getOnlineUser', (data) => {
            $('#' + data.user_id + '-status').text('Online');
            $('#' + data.user_id + '-status').removeClass('offline-status');
            $('#' + data.user_id + '-status').addClass('online-status');
        })

        // update user offline status
        socket.on('getOfflineUser', (data) => {
            $('#' + data.user_id + '-status').text('Offline');
            $('#' + data.user_id + '-status').removeClass('online-status');
            $('#' + data.user_id + '-status').addClass('offline-status');
        })

        //chat save of user
        $('#chat-form').submit((e) => {
            e.preventDefault();
            var message = $('#message').val();

            jQuery.noConflict();
            $.ajax({
                url: '/save-chat',
                type: 'post',
                data: {
                    sender_id: sender_id,
                    receiver_id: receiver_id,
                    message: message
                },
                success: (response) => {
                    if (response.success) {
                        $('#message').val('');
                        let chat = response.data.message;
                        let html = `
                            <div class="current-user-chat" id='`+response.data._id+`'>
                                <h5>`+chat+` 
                                <i class="fa fa-trash" aria-hidden="true" data-id="`+response.data._id+`" data-toggle="modal" data-target="#deleteChatModal"></i>
                                </h5>
                            </div>
                        `;
                        $('#chat-container').append(html);
                        socket.emit('newChat', response.data);
                        scrollChat();
                    }
                    else {
                        alert(data.msg)
                    }
                }
            });
        })

        socket.on('loadNewChat',(data)=>{
            //not sure if data._id exsists
            if(sender_id == data.receiver_id && receiver_id == data.sender_id) {
                let chat = data.message;
                let html = `
                    <div class="distance-user-chat" id='`+data._id+`'> 
                        <h5>`+chat+`</h5>
                    </div>
                `;
                $('#chat-container').append(html);
                scrollChat();
            }
        })

        
        socket.on('loadChats', (data) => {
            $('#chat-container').html(''); // Clear previous chats
            const chats = data.chats;
            let html = '';

            for (let x = 0; x < chats.length; x++) {
                let addClass = (chats[x]['sender_id'] == sender_id) ? 'current-user-chat' : 'distance-user-chat';

                html += `
                    <div class='${addClass}' id='${chats[x]['_id']}'>
                        <h5>${chats[x]['message']}`;
                
                if (chats[x]['sender_id'] == sender_id) {
                    html += `<i class="fa fa-trash" aria-hidden="true" data-id="${chats[x]['_id']}" data-toggle="modal" data-target="#deleteChatModal"></i>`;
                }
                
                html += `</h5>
                    </div>`;
            }

            $('#chat-container').append(html);
            scrollChat(); // Ensure scrolling happens
        });


        function scrollChat() {
            jQuery.noConflict();
            let chatContainer = $('#chat-container');
            chatContainer.animate({
                scrollTop: chatContainer[0].scrollHeight
            }, 'fast'); // Use 'fast' or adjust duration for smooth scrolling
        }

        
        $(document).on('click','.fa-trash',function(){
            jQuery.noConflict();
            let msg =  $(this).parent().text();
            $('#delete-message').text(msg)
            $('#delete-message-id').val($(this).attr('data-id'))
        })

        $('#delete-chat-form').submit(function(e){
            e.preventDefault();
            jQuery.noConflict();
            const id = $('#delete-message-id').val();
            $.ajax({
                url: '/delete-chat',
                type: 'post',
                data: {
                    id: id
                },
                success: (response) => {
                    if (response.success) {
                        jQuery.noConflict();
                        $('#'+id).remove();
                        jQuery.noConflict();
                        $('#deleteChatModal').modal('hide');
                        socket.emit('chatDeleted',id);
                    }
                    else {
                        alert(response.msg)
                    }
                }
            })
        });

        socket.on('chatMessageDeleted',(id)=>{
            $('#'+id).remove();
        })
        

    </script>

    <script src="/vanillaEmojiPicker.js"></script>
    <script>
        
        
        new EmojiPicker({
            trigger: [
                {
                    selector: '.first-btn',
                    insertInto: ['.one', '.two'] // '.selector' can be used without array
                },
                {
                    selector: '.second-btn',
                    insertInto: '.two'
                }
            ],
            closeButton: true,
            //specialButtons: green
        });


    </script>
    



    <%-include('layouts/footer.ejs') %>